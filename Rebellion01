using System;
using UnityEngine;
using UnityEngine.UI;

namespace Zenject.Rebellion
{
    public class PlayerInstaller : MonoInstaller
    {
        [SerializeField]
        Settings mySettings = null;

        public override void InstallBindings()
        {
            Container.Bind<Player>().AsSingle().WithArguments(mySettings.Rigidbody, mySettings.Animator);
            Container.Bind<PlayerInputState>().AsSingle();

            Container.BindInterfacesAndSelfTo<PlayerModifyPhysicsHandler>().AsSingle();
            Container.BindInterfacesAndSelfTo<PlayerDamageHandler>().AsSingle();
            Container.BindInterfacesAndSelfTo<PlayerStatsHandler>().AsSingle();
            Container.BindInterfacesAndSelfTo<PlayerGui>().AsSingle().WithArguments(mySettings.Life, mySettings.Mana,
                mySettings.Health, mySettings.Power, mySettings.Progress);

            Container.BindInterfacesTo<PlayerRecoverLifeWatcher>().AsSingle();
            Container.BindInterfacesTo<PlayerRecoverManaWatcher>().AsSingle();
            Container.BindInterfacesTo<PlayerDirectionHandler>().AsSingle();
            Container.BindInterfacesTo<PlayerHealthWatcher>().AsSingle();
            Container.BindInterfacesTo<PlayerStatsWatcher>().AsSingle();
            Container.BindInterfacesTo<PlayerShootHandler>().AsSingle();
            Container.BindInterfacesTo<PlayerInputHandler>().AsSingle();
            Container.BindInterfacesTo<PlayerMoveHandler>().AsSingle();

            Container.BindInterfacesTo<ShootEffectsHandler>().AsSingle();

            Container.Bind<GameShopHandler>().AsSingle();
            Container.BindInterfacesAndSelfTo<GameShopWatcher>().AsSingle();

            Container.Bind<QuestsHandler>().AsSingle();
            Container.BindInterfacesAndSelfTo<QuestsWatcher>().AsSingle();
        }

        [Serializable]
        public class Settings
        {
            public Rigidbody2D Rigidbody;
            public Animator Animator;
            public Image Life;
            public Image Mana;
            public Text Health;
            public Text Power;
            public Text Progress;
        }
    }
}
